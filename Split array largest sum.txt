#include <vector>
using namespace std;

class Solution {
public:
    bool isPossible(vector<int>& nums, int k, int mid) {
        int count = 1;
        int pgsum = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (pgsum + nums[i] <= mid)
                pgsum += nums[i];
            else {
                count++;
                if (count > k || nums[i] > mid)
                    return false;
                pgsum = nums[i];
            }
        }
        return true;
    }

    int splitArray(vector<int>& nums, int k) {
        int s = 0, sum = 0, ans = -1, mid;
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
        }
        int e = sum;
        while (s <= e) {
            mid = s + (e - s) / 2;
            if (isPossible(nums, k, mid)) {
                ans = mid;
                e = mid - 1;
            } else
                s = mid + 1;
        }
        return ans;
    }
};
